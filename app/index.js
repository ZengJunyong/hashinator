// Generated by CoffeeScript 1.6.3
(function() {
  var app, connectCoffee, express, fs, nib, port, stylus, _;

  _ = require("underscore");

  fs = require("fs");

  express = require('express');

  stylus = require('stylus');

  connectCoffee = require('connect-coffee-script');

  nib = require('nib');

  app = express();

  app.configure(function() {
    var env, __base;
    __base = process.cwd();
    app.use(express.cookieParser("tempSecret"));
    app.use(express.bodyParser());
    env = app.get("env");
    if (env === "development") {
      app.use(express.errorHandler());
    }
    app.use(stylus.middleware({
      src: "" + __base + "/app/public/src",
      dest: "" + __base + "/app/public/generated",
      force: app.get("env") === "production" ? false : true,
      compile: function(str, path) {
        return stylus(str).set("filename", path).set("compress", env === "production").use(nib())["import"]('nib');
      }
    }));
    app.use(connectCoffee({
      src: "" + __base + "/app/public/src",
      dest: "" + __base + "/app/public/generated",
      bare: false
    }));
    app.use(express["static"]("" + __base + "/app/public/generated"));
    app.use(express["static"]("" + __base + "/app/public/static"));
    app.set('view engine', 'jade');
    return app.set('views', "" + __base + "/app/views");
  });

  require("./routes/main")(app);

  require("./routes/example")(app);

  app.use(function(err, req, res, next) {
    if (req.xhr) {
      return res.send({
        error: err
      });
    } else {
      return res.send(err);
    }
  });

  port = process.env.PORT || 3000;

  app.listen(port, function() {
    return console.log("App Started, Listening on " + port + "\nPress CTRL-C to stop server.");
  });

}).call(this);
